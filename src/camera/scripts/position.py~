#!/usr/bin/env python  
import roslib
import rospy
import math
import tf
#import geometry_msgs.msg
from geometry_msgs.msg import (
    PoseArray,
    PoseStamped,
    Pose,
    Point,
    Quaternion,
    Twist,
)
from apriltags_ros.msg import (AprilTagDetection,AprilTagDetectionArray)


if __name__ == '__main__':
    rospy.init_node('tag_position')

    listener = tf.TransformListener()

    position = rospy.Publisher('geometry_msgs/Pose', PoseStamped, queue_size=10)
    #position = rospy.Publisher('tag_detections_pose', geometry_msgs.msg.PoseArray, queue_size=10)
    rate = rospy.Rate(10.0)
    while not rospy.is_shutdown():
        try:
            (trans,rot) = listener.lookupTransform('tag_0', 'tag_1', rospy.Time(0))
        except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
            continue

        #print trans,rot
        #(roll, pitch, yaw) = tf.transformations.euler_from_quaternion([rot[0],rot[1],rot[2],rot[3]])
        #print roll,pitch,yaw
        pose = PoseStamped()
        pose.position.x = trans[0]
        pose.position.y = trans[1]
        pose.position.z = trans[2]

        pose.orientation.x = rot[0]
        pose.orientation.y = rot[1]
        pose.orientation.z = rot[2]
        pose.orientation.w = rot[3]
        position.publish(pose)

        rate.sleep()
