// Generated by gencpp from file lab5/MoveBot.msg
// DO NOT EDIT!


#ifndef LAB5_MESSAGE_MOVEBOT_H
#define LAB5_MESSAGE_MOVEBOT_H

#include <ros/service_traits.h>


#include <lab5/MoveBotRequest.h>
#include <lab5/MoveBotResponse.h>


namespace lab5
{

struct MoveBot
{

typedef MoveBotRequest Request;
typedef MoveBotResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MoveBot
} // namespace lab5


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lab5::MoveBot > {
  static const char* value()
  {
    return "13049e71ce257115ce81a97e5adc1c6e";
  }

  static const char* value(const ::lab5::MoveBot&) { return value(); }
};

template<>
struct DataType< ::lab5::MoveBot > {
  static const char* value()
  {
    return "lab5/MoveBot";
  }

  static const char* value(const ::lab5::MoveBot&) { return value(); }
};


// service_traits::MD5Sum< ::lab5::MoveBotRequest> should match 
// service_traits::MD5Sum< ::lab5::MoveBot > 
template<>
struct MD5Sum< ::lab5::MoveBotRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lab5::MoveBot >::value();
  }
  static const char* value(const ::lab5::MoveBotRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lab5::MoveBotRequest> should match 
// service_traits::DataType< ::lab5::MoveBot > 
template<>
struct DataType< ::lab5::MoveBotRequest>
{
  static const char* value()
  {
    return DataType< ::lab5::MoveBot >::value();
  }
  static const char* value(const ::lab5::MoveBotRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lab5::MoveBotResponse> should match 
// service_traits::MD5Sum< ::lab5::MoveBot > 
template<>
struct MD5Sum< ::lab5::MoveBotResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lab5::MoveBot >::value();
  }
  static const char* value(const ::lab5::MoveBotResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lab5::MoveBotResponse> should match 
// service_traits::DataType< ::lab5::MoveBot > 
template<>
struct DataType< ::lab5::MoveBotResponse>
{
  static const char* value()
  {
    return DataType< ::lab5::MoveBot >::value();
  }
  static const char* value(const ::lab5::MoveBotResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LAB5_MESSAGE_MOVEBOT_H
